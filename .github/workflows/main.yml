name: Build YouTube Downloader

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64]
        include:
          - arch: x64
            msystem: MINGW64
            package-prefix: mingw-w64-x86_64
    
    defaults:
      run:
        shell: msys2 {0}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: >-
          base-devel
          git
          ${{ matrix.package-prefix }}-toolchain
          ${{ matrix.package-prefix }}-cmake
          ${{ matrix.package-prefix }}-curl
          ${{ matrix.package-prefix }}-pkg-config
          ${{ matrix.package-prefix }}-openssl
          python
          python-pip
          ffmpeg
    
    - name: Install yt-dlp
      run: |
        pip install yt-dlp
        which yt-dlp
        yt-dlp --version
    
    - name: Verify dependencies
      run: |
        g++ --version
        pkg-config --version
        pkg-config --cflags --libs libcurl
        ffmpeg -version
    
    - name: Build with Makefile
      run: |
        make clean || true
        make all
    
    - name: Test executable
      run: |
        ./youtube_downloader.exe --help || echo "Help not implemented, but executable runs"
        file youtube_downloader.exe
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: youtube-downloader-windows-${{ matrix.arch }}
        path: youtube_downloader.exe
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libcurl4-openssl-dev \
          pkg-config \
          ffmpeg \
          python3-pip
        pip3 install yt-dlp
    
    - name: Setup compiler
      run: |
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          sudo apt-get install -y clang
          echo "CXX=clang++" >> $GITHUB_ENV
        else
          echo "CXX=g++" >> $GITHUB_ENV
        fi
    
    - name: Build with Makefile
      run: |
        make clean || true
        make all CXX=${{ env.CXX }}
    
    - name: Test executable
      run: |
        ./youtube_downloader --help || echo "Help not implemented, but executable runs"
        ldd youtube_downloader
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: youtube-downloader-linux-${{ matrix.compiler }}
        path: youtube_downloader
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        brew update
        brew install curl pkg-config ffmpeg python3
        pip3 install yt-dlp
    
    - name: Build with Makefile
      run: |
        make clean || true
        make all
    
    - name: Test executable
      run: |
        ./youtube_downloader --help || echo "Help not implemented, but executable runs"
        otool -L youtube_downloader
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: youtube-downloader-macos
        path: youtube_downloader
        retention-days: 30

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare release files
      run: |
        mkdir -p release
        
        # Windows
        cp artifacts/youtube-downloader-windows-x64/youtube_downloader.exe release/youtube-downloader-windows-x64.exe
        
        # Linux
        cp artifacts/youtube-downloader-linux-gcc/youtube_downloader release/youtube-downloader-linux-gcc
        cp artifacts/youtube-downloader-linux-clang/youtube_downloader release/youtube-downloader-linux-clang
        
        # macOS
        cp artifacts/youtube-downloader-macos/youtube_downloader release/youtube-downloader-macos
        
        # Make executables executable
        chmod +x release/youtube-downloader-*
        
        # Create checksums
        cd release
        sha256sum * > checksums.txt
        ls -la
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-functionality:
    needs: [build-windows]
    runs-on: windows-latest
    
    defaults:
      run:
        shell: msys2 {0}
    
    steps:
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          python
          python-pip
          ffmpeg
    
    - name: Install yt-dlp
      run: pip install yt-dlp
    
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: youtube-downloader-windows-x64
        path: .
    
    - name: Test with sample video (short test video)
      run: |
        # Test with a very short video to avoid long CI times
        ./youtube_downloader.exe "https://www.youtube.com/watch?v=jNQXAC9IVRw" 4 || echo "Test completed with exit code $?"
        ls -la *.mp4 || echo "No MP4 files found"
